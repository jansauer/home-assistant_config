# https://www.home-assistant.io/docs/automation/

# Turn on entryway ligth based on motion
# https://www.home-assistant.io/cookbook/turn_on_light_for_10_minutes_when_motion_detected/
- alias: Turn on entryway light when there is movement
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor_158d0002e2edae
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: switch.wall_switch_158d000161469d
    state: 'off'
  action:
    - service: homeassistant.turn_on
      entity_id: switch.wall_switch_158d000161469d
    - service: timer.start
      data:
        entity_id: timer.entryway
- alias: Turn off entryway lights after movement
  trigger:
    platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.entryway
  action:
    service: homeassistant.turn_off
    entity_id: switch.wall_switch_158d000161469d

# Wake-me up using bedroom lights
# https://www.wouterbulten.nl/blog/tech/custom-wake-up-light-with-home-assistant/
- alias: 'Wake-me up using bedroom lights'
  trigger:
    platform: template
    value_template: "{{ states('sensor.time') == (states.input_datetime.wakeup_time.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
  condition:
    - condition: or
      conditions:
        - condition: state
          entity_id: input_boolean.wakeup_weekend
          state: 'on'
        - condition: time
          weekday:
            - mon
            - tue
            - wed
            - thu
            - fri
  action:
    - service: light.turn_on
      entity_id: light.ikea_tradfri_bulb_e27_opal_1000lm_1
      data:
        transition: 1800  # seconds => 30min
        brightness: 255

- alias: 'Set theme for day and night'
  trigger:
    - platform: homeassistant
      event: start
    - platform: state
      entity_id: sun.sun
      to: above_horizon
    - platform: state
      entity_id: sun.sun
      to: below_horizon
  action:
    - service_template: frontend.set_theme
      data_template:
        name: >
          {% if states.sun.sun.state == "above_horizon" %}
            clear
          {% else %}
            dark
          {% endif %}

- alias: 'Update Available Notifications'
  trigger:
    platform: state
    entity_id: updater.updater
  action:
    service: notify.notify
    data_template:
      title: 'Update Available'
      message: 'Home Assistant {{ states.updater.updater.state }}'

- alias: 'Plant Problem Notifications'
  trigger:
    - platform: state
      entity_id: plant.snowflower
      to: problem
  action:
    service: notify.notify
    data_template:
      title: 'Plant !!! has a problem'
      message: 'Home Assistant {{ trigger.to_state }}'
