# https://www.home-assistant.io/docs/automation/

##
## Presence Automations
##

- alias: Leaving Home
  trigger:
    platform: state
    entity_id: person.jan
    from: "home"
  action:
    - service: notify.pushover
      data:
        message: "Leaving"
    # - service: climate.set_preset_mode
    #   data:
    #     entity_id: climate.netatmo_living_room
    #     preset_mode: away
    # - service: scene.turn_on
    #   entity_id: scene.livingroom_off

- alias: Returning Home
  trigger:
    platform: state
    entity_id: person.jan
    to: "home"
  action:
    - service: notify.pushover
      data:
        message: "Returning"

##
## Wall Switchs
##

- alias: 'Wall switch living room left single click'
  trigger:
    platform: event
    event_type: shellyforhass.click
    event_data:
      entity_id: binary_sensor.shelly_shsw_25_40f520015f98_1_switch
      click_type: single #long, double, triple
  action:
    - choose:
      - conditions:
        - condition: state
          entity_id: light.livingroom_ceiling_lights
          state: 'off'
        sequence:
          - service: light.turn_on
            data_template:
              entity_id: light.livingroom_ceiling_lights
              # brightness_step_pct: 50
              transition: 0.5
          - service: light.turn_on
            data_template:
              entity_id: light.livingroom_accent_lights
      - conditions:
        - condition: state
          entity_id: light.livingroom_ceiling_lights
          state: 'on'
        sequence:
          - service: light.turn_off
            data_template:
              entity_id: light.livingroom_ceiling_lights
          - condition: state
            entity_id: light.livingroom_floor_lamp
            state: 'off'
          - service: light.turn_off
            data_template:
              entity_id: light.livingroom_accent_lights

- alias: 'Wall switch living room right single click'
  trigger:
    platform: event
    event_type: shellyforhass.click
    event_data:
      entity_id: binary_sensor.shelly_shsw_25_40f520015f98_2_switch
      click_type: single #long, double, triple
  action:
    - choose:
      - conditions:
        - condition: state
          entity_id: light.livingroom_floor_lamp
          state: 'off'
        sequence:
          - service: light.turn_on
            data_template:
              entity_id: light.livingroom_floor_lamp
          - service: light.turn_on
            data_template:
              entity_id: light.livingroom_accent_lights
      - conditions:
        - condition: state
          entity_id: light.livingroom_floor_lamp
          state: 'on'
        sequence:
          - service: light.turn_off
            data_template:
              entity_id: light.livingroom_floor_lamp
          - condition: state
            entity_id: light.livingroom_ceiling_lights
            state: 'off'
          - service: light.turn_off
            data_template:
              entity_id: light.livingroom_accent_lights

- alias: 'Wall switch bedroom left single click'
  trigger:
    platform: event
    event_type: shellyforhass.click
    event_data:
      entity_id: binary_sensor.shelly_shsw_25_483fda4ce546_1_switch
      click_type: single #long, double, triple
  action:
    service: light.toggle
    entity_id: light.ikea_tradfri_bulb_e27_opal_1000lm_1

##
## Wake-me up using bedroom lights
## https://www.wouterbulten.nl/blog/tech/custom-wake-up-light-with-home-assistant/
##

- alias: 'Wake-me up using bedroom lights'
  trigger:
    platform: template
    value_template: "{{ states('sensor.time') == (states.input_datetime.wakeup_time.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
  condition:
    - condition: or
      conditions:
        - condition: state
          entity_id: input_boolean.wakeup_weekend
          state: 'on'
        - condition: time
          weekday:
            - mon
            - tue
            - wed
            - thu
            - fri
  action:
    - service: light.turn_on
      entity_id: light.ikea_tradfri_bulb_e27_opal_1000lm_1
      data:
        transition: 1800  # seconds => 30min
        brightness: 255

##
## Notifications
##

- alias: 'Open Window Notifications'
  trigger:
    platform: state
    # entity_id: binary_sensor.lumi_lumi_sensor_magnet_eb017b02
    entity_id: binary_sensor.lumi_lumi_sensor_magnet_0e017b02
    to: 'Open'
    for:
      minutes: /5
  action:
    service: notify.mobile_app_iphone_x
    data:
      message: >
        {{ trigger.entity_id.friendly_name }} is still open!
      data:
        push:
          thread-id: "open-window-group"

- alias: 'Plant Problem Notifications'
  trigger:
    - platform: state
      entity_id:
        - plant.ficus
        - plant.basil
      to: problem
  action:
    - service: notify.mobile_app_iphone_x
      data:
        message: >
          {%- set problem = trigger.entity_id.attributes.problem.split(' ') %}
          Plant {{ trigger.entity_id.friendly_name }} has {{ problem[1] }} {{ problem[0] }}!
        data:
          url: /lovelace/plants
          push:
            thread-id: "plant-group"

- alias: 'Plant Problem Remainder Notifications'
  trigger:
    platform: time
    at:
      - "07:30:00"
      - "09:30:00"
      - "17:30:00"
      - "19:30:00"
  condition:
    condition: state
    entity_id: group.plants
    state: problem
  action:
    service: notify.mobile_app_iphone_x
    data:
      message: >
        {%- for entity_id in states.group.plants.attributes.entity_id %}
          {%- if (states[entity_id].state == 'problem') %}
            {%- set problem = states[entity_id].attributes.problem.split(' ') %}
            {{- states[entity_id].attributes.friendly_name }} has {{ problem[1] }} {{ problem[0] }}!
          {%- endif %}
        {% endfor %}
      data:
        url: /lovelace/plants
        push:
          thread-id: "plant-group"

##
## Theme Day/Night Switch
##

- alias: 'Set theme for day and night'
  trigger:
    - platform: homeassistant
      event: start
    - platform: state
      entity_id: sun.sun
      to: above_horizon
    - platform: state
      entity_id: sun.sun
      to: below_horizon
  action:
    - service_template: frontend.set_theme
      data_template:
        name: >
          {% if states.sun.sun.state == "above_horizon" %}
            clear
          {% else %}
            dark
          {% endif %}
